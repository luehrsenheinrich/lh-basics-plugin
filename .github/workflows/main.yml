# This workflow tests if the commit or pr meets the requirements and deploys to
# a development server upon success.
# It assumes that `npm install`, `composer install` and `npx grunt release` are valid commands.
# The action expects a valid zip file in the `./update/` folder and the `slug` key in the
# `package.json` to be set.
name: 🏗 Build & Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  bnd:
    name: Build & Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: ⚙️ Setup PHP with tools
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          tools: composer:v2

      - name: 💾 Get node.js cache directory
        id: node-cache-dir
        run: echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT # Use $(yarn cache dir) for yarn

      - name: 💾 Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.node-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }} # Use '**/yarn.lock' for yarn
          restore-keys: ${{ runner.os }}-node-

      - name: 💾 Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: ⚙️ Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: ⚙️ Install Composer Packages
        run: composer install --prefer-dist --optimize-autoloader

      - name: ⚙️ Install Node Packages
        run: npm i

      - name: 🔎 Lint the code
        run: npm run lint

      - name: 🏗 Build the code release
        run: npm run release
